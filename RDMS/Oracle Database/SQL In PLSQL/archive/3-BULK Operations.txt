BULK 
======
--Bulk operations is somewhat a advanced topic 
--lets see a select statement using BULK INTO
-- here below you are declare a local array of employee row type i,e array of records, and the local record of that type and continues.
--Assume that you have millions of records like that.

bulk_collect_into.sql
DECLARE
  TYPE t_local_emps 
    IS TABLE OF EMPLOYEES%ROWTYPE;
  v_local_emps t_local_emps;
BEGIN

  SELECT *
    BULK COLLECT INTO v_local_emps
    FROM EMPLOYEES;

  FOR i IN 1..v_local_emps.LAST
  LOOP
    dbms_output.put_line(v_local_emps(i).last_name);
  END LOOP;
END;
/

--- if you want to limit the row , then use the cursor operations, with those cursor type
--here you can create the cursor on the row type or a table 
bulk_collect_into_with_limit.sql

DECLARE

  CURSOR c_emps IS
    SELECT last_name, first_name
      FROM employees;

  TYPE t_local_emps 
    IS TABLE OF c_emps%ROWTYPE;
    
  v_local_emps t_local_emps;
  
  v_loop_counter NUMBER := 0;
BEGIN

  OPEN c_emps;
  
  LOOP
    FETCH c_emps 
      BULK COLLECT INTO v_local_emps
      LIMIT 3;

    v_loop_counter := v_loop_counter + 1;
    FOR i IN 1..v_local_emps.LAST
    LOOP
      dbms_output.put_line('On Loop: ' || 
        v_loop_counter ||
        ',  ' || v_local_emps(i).last_name);
    END LOOP;

    EXIT WHEN c_emps%NOTFOUND;
      
  END LOOP;    
      
END;
/


---Assignment, using the above code, find how many blanks are there in an array, how many of them are there in last set

DML on BULK
===========

--create a table
CREATE TABLE emp_names (
  last_name VARCHAR2(25),
  first_name VARCHAR2(20) )
/  


FORALL 
======
--FOR ALL can be used into all Update like delete..etc
--this has a fast performance using with BULK Keyword

bulk_operations_with_forall.sql

DECLARE

  CURSOR c_emps IS
    SELECT last_name, first_name
      FROM employees;
  TYPE t_local_emps 
    IS TABLE OF c_emps%ROWTYPE;
  v_local_emps t_local_emps;
BEGIN

  SELECT last_name, first_name
    BULK COLLECT INTO v_local_emps
    FROM EMPLOYEES;

  FORALL i IN v_local_emps.FIRST..v_local_emps.LAST
    INSERT INTO emp_names 
      VALUES v_local_emps(i);
      
END;
/

--Assignment, convert the above FORALL code where you need to limit into 11 , so on the first loop insert 10 and next loop insert 10..like that






