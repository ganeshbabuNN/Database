Excpetions

--- Try to understand the difference between Exception and Exceptions Handling
--- Basically in PLSQL , the exception which happens Post Compilations, the error might be excepted, 
for example, you might be selecting data from the table, where there is no row. Hence Oracle raise no data found which is a exceptions,
Here is how to handle the errors, here you and the program do the mechanism.
--- Understand with the below block as the section in the PLSQL block
--- in general, Declaration and the Exception section are optional, you no need to declare any variables and handle any exceptions, but in general it is a good pratice to handle exceptions.

DECLARE

BEGIN

EXCEPTION

END

uncaught_excp.sql
-- This exception will not be caught
coz it is a variable declartions and the errors is appearing in the declarations block, for Exception hanlders , the exception to be raised in the executable block i,e the begin block.

DECLARE
  v_what NUMBER := 'abc';
BEGIN
  NULL;
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/

-- This exception will be caught
DECLARE
  v_what NUMBER;
BEGIN
  v_what := 'ABC';
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/

---it might not be good pratice where the return null for the exceptions is a good pratice.
---understand , whenever there is a exception , it goes to the nearest way of exceptions. 

COMPILER and RUNTIME Exceptions
===============================
--Here there is error where character is assign to the number variables, but the code has compiled successfully, but this is near to the declarations section not in the executable section where exception can be handled.

 	
badabc1.sql

CREATE OR REPLACE PROCEDURE bad_abc
AS
  v_what NUMBER := 'abc';
BEGIN
  NULL;
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/

--if you call now the using AB, excetion was unable to handled coz it was in the declarations sections.
BEGIN
  bad_abc;
END;
/

--Let us change the code and check if how the exception can be handled.
--- now let us assign the variable in the executable block.

badabc2.sql
CREATE OR REPLACE PROCEDURE bad_abc
AS
  v_what NUMBER;
BEGIN
  v_what := 'abc';
EXCEPTION
  WHEN OTHERS THEN NULL;
END;
/

--Now call the proc and the exception is handled now. which is basically hidden.
BEGIN
  bad_abc;
END;
/



---if i remove the exception block and call the proce
bad_abc3.sql
CREATE OR REPLACE PROCEDURE bad_abc
AS
  v_what NUMBER;
BEGIN
  v_what := 'abc';
END;
/

--the AB will unable to handle this exception 
BEGIN
  bad_abc;
END;
/

NAMED Exceptions
=================
--But Still this Exception can be handled in the AB. this sort of value error basically nothing but the Name exceptions
BEGIN
  bad_abc;
exception
 when value_error
 then
 null;
END;
/

---Assume if I put some other named exceptions
BEGIN
  bad_abc;
exception
 when no_data_found
 then
 null;
END;
/










