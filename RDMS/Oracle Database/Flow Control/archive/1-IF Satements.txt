
--let us use the logit autonomous transaction.sql add some logic using IF satement where procedures should either print in console or insert in table
--let us design where procedure should call for D for console and T for table.

logit with IF.sql

create or replace PROCEDURE logit(
  v_message IN VARCHAR2 DEFAULT 'Hello World!',
  v_output_target IN VARCHAR2 DEFAULT 'T')
AS

  -- v_output target may be T for table or
  --    D for dbms_output

  PRAGMA AUTONOMOUS_TRANSACTION;
  v_date DATE := SYSDATE;
BEGIN

  IF v_output_target = 'T'
  THEN
    insert into log_table
      (date_and_time, message)
      VALUES (v_date, v_message);
  ELSIF v_output_target = 'D'
  THEN
    DBMS_OUTPUT.put_line(
        v_message ||
        ' The date and time is ' ||
        to_char(v_date, 'Day') || ' on ' ||
        to_char(v_date, 'FMDD Month, YYYY') ||
        ' @ ' ||
        to_char(v_date, 'HH24:MI:SS')
        );
  END IF;

  COMMIT;

END;
/

-- now call logit procedures, check in the console and table .
call logit with rollback.sql
BEGIN
  logit;
  BEGIN
    logit( 'Hello again!','D');
    DECLARE
      v_a_different_msg VARCHAR2(100);
    BEGIN
      rollback; -- Notice the rollback
      v_a_different_msg := 'Where am I?';
      logit( v_a_different_msg );
    END;
  END;
END;
/
--now lets design where both the logit procedures should go to the console,
--you can use the named notations for directly using the paramater name  and whereas the positional notations is exactly.
BEGIN
  logit(v_output_target => 'D');
  BEGIN
    logit( 'Hello again!','D');
    DECLARE
      v_a_different_msg VARCHAR2(100);
    BEGIN
      rollback; -- Notice the rollback
      v_a_different_msg := 'Where am I?';
      logit( v_a_different_msg );
    END;
  END;
END;
/

--you can go from positional to name notations not from positional to name
BEGIN
  logit(v_output_target => 'D');
  BEGIN
    logit( 'Hello again!',v_output_target => 'D');
    DECLARE
      v_a_different_msg VARCHAR2(100);
    BEGIN
      rollback; -- Notice the rollback
      v_a_different_msg := 'Where am I?';
      logit( v_a_different_msg );
    END;
  END;
END;
/

---now try to call 'P' and check the outpoint
--basicall this is the lost message
BEGIN
  logit(v_output_target => 'P');
  BEGIN
    logit( 'Hello again!',v_output_target => 'D');
    DECLARE
      v_a_different_msg VARCHAR2(100);
    BEGIN
      rollback; -- Notice the rollback
      v_a_different_msg := 'Where am I?';
      logit( v_a_different_msg );
    END;
  END;
END;
/

IF-ELSE Statement
=================

logit with ELSE.sql
create or replace PROCEDURE logit(
  v_message IN VARCHAR2 DEFAULT 'Hello World!',
  v_output_target IN VARCHAR2 DEFAULT 'T')
AS

  -- v_output target may be T for table or
  --    D for dbms_output

  PRAGMA AUTONOMOUS_TRANSACTION;
  v_date DATE := SYSDATE;
BEGIN

  IF v_output_target = 'T'
  THEN

    insert into log_table
      (date_and_time, message)
      VALUES (v_date, v_message);

  ELSIF v_output_target = 'D'
  THEN

    DBMS_OUTPUT.put_line(
        v_message ||
        ' The date and time is ' ||
        to_char(v_date, 'Day') || ' on ' ||
        to_char(v_date, 'FMDD Month, YYYY') ||
        ' @ ' ||
        to_char(v_date, 'HH24:MI:SS')
        );

  ELSE
--recursive calls
    logit('ERROR v_output_target: ' ||
          v_output_target ||
          ' not found.', 'T' );
  END IF;

  COMMIT;

END;
/

--call the logit procedures
BEGIN
  logit(v_output_target => 'P');
  BEGIN
    logit( 'Hello again!',v_output_target => 'D');
    DECLARE
      v_a_different_msg VARCHAR2(100);
    BEGIN
      rollback; -- Notice the rollback
      v_a_different_msg := 'Where am I?';
      logit( v_a_different_msg );
    END;
  END;
END;
/


